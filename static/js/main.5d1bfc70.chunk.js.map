{"version":3,"sources":["../node_modules/express/lib sync","context/auth/authContext.js","components/layout/Navbar.js","context/contact/contactContext.js","components/contacts/ContactItem.js","components/layout/Spinner.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","context/types.js","context/contact/contactReducer.js","context/contact/contactState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","authContext","createContext","Navbar","title","icon","useContext","AuthContext","isAuthenticated","logout","user","authLinks","name","onClick","href","className","guestLinks","to","defaultProps","contactContext","ContactItem","contact","ContactContext","deleteContact","setCurrent","clearCurrent","email","phone","type","style","float","charAt","toUpperCase","slice","Spinner","Contacts","contacts","filtered","getContacts","loading","useEffect","length","TransitionGroup","map","CSSTransition","timeout","classNames","_id","ContactForm","addContact","current","updateContact","setContact","useState","onChange","target","value","clearAll","onSubmit","preventDefault","placeholder","checked","ContactFilter","text","useRef","filterContacts","clearFilter","ref","Home","loadUser","About","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","CONTACT_ERROR","state","action","payload","filter","regex","RegExp","match","error","ContactState","props","useReducer","contactReducer","dispatch","a","axios","post","res","data","response","msg","config","headers","Provider","children","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","authReducer","get","register","formData","login","clearErrors","alertContext","alert","AlertState","alertReducer","alerts","setAlert","uuidv4","setTimeout","Register","AlertContext","history","push","password","password2","setUser","htmlFor","required","minLength","Login","Alerts","PrivateRoute","Component","component","rest","render","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d1bfc70.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 305;","//initialize our context\r\n\r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { Fragment, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport { Link } from 'react-router-dom'\r\nexport const Navbar = ({ title, icon }) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { isAuthenticated, logout, user } = authContext;\r\n    const onLogout = () =>{\r\n        logout();\r\n    }\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li>\r\n                Hello {user && user.name}\r\n            </li>\r\n            <li>\r\n                <a onClick={onLogout} href=\"#!\">\r\n                    <i className=\"fas fa-sign-out-alt\"></i> <span className=\"hide-sm\">Logout</span>\r\n                </a>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li>\r\n                <Link to='/register'>Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/login'>Login</Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n    return (\r\n        <div className=\"navbar bg-primary\">\r\n            <h1>\r\n                <i className={icon} /> {title}\r\n            </h1>\r\n\r\n            <ul>\r\n            { isAuthenticated ? authLinks : guestLinks} \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Contact Keeper',\r\n    icon: 'fas fa-id-card-alt'\r\n}\r\nexport default Navbar\r\n","//initialize our context\r\n\r\nimport { createContext } from 'react';\r\n\r\nconst contactContext = createContext();\r\n\r\nexport default contactContext;","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContactContext from '../../context/contact/contactContext'\r\nconst ContactItem = ({ contact }) => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n    const { id, name, email, phone, type } = contact;\r\n    const onDelete = () => {\r\n        deleteContact(id);\r\n        clearCurrent();\r\n    }\r\n    \r\n    return (\r\n        <div className=\"card bg-light\">\r\n            <h3 className=\"text-primary text-left\">\r\n                {name}{' '}<span style={{ float: 'right' }} className={'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary')}>{type.charAt(0).toUpperCase() + type.slice(1)}</span>\r\n            </h3>\r\n            <ul className=\"list\">\r\n                {email && (\r\n                    <li>\r\n                        <i className=\"fas fa-envelope-open\"> {email}</i>\r\n                    </li>\r\n                )}\r\n                {phone && (\r\n                    <li>\r\n                        <i className=\"fas fa-phone\"> {phone}</i>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <p>\r\n                <button className=\"btn btn-primary btn-sm\" onClick={()=>setCurrent(contact)}>Edit</button>\r\n                <button className=\"btn btn-danger btn-sm\" onClick={onDelete} >Delete</button>\r\n\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ContactItem\r\n\r\n","import React,{Fragment} from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nconst Spinner =  () => {\r\n   <Fragment>\r\n       <img src={spinner} \r\n       style={{ width: '200px', margin: 'auto', display: 'block' }} \r\n       alt='Loading...'/>\r\n   </Fragment> \r\n}\r\nexport default Spinner;\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport ContactItem from './ContactItem'\r\nimport ContactContext from '../../context/contact/contactContext'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Spinner from '../layout/Spinner'\r\nconst Contacts = () => {\r\n    const contactContext = useContext(ContactContext);  //now we will have access to any state or actions/methods associated with this context\r\n    const { contacts, filtered, getContacts, loading } = contactContext;\r\n    useEffect(()=>{\r\n        getContacts();\r\n        //eslint-disable-next-line\r\n    },[])\r\n    \r\n    if (contacts !== null && contacts.length === 0 && !loading) {\r\n        return <h4>Please add a contact!</h4>\r\n    }\r\n    return (\r\n        <Fragment>\r\n            { contacts !== null && !loading ? (<TransitionGroup>\r\n                {filtered !== null ? filtered.map(contact =>\r\n                    (\r\n                        <CSSTransition key={contact._id} timeout={500} classNames = \"item\">\r\n                            <ContactItem  contact={contact} />\r\n                        </CSSTransition>\r\n                    )\r\n                ) : contacts.map(contact =>\r\n                    (<CSSTransition key={contact._id} timeout={500} classNames = \"item\">\r\n                        <ContactItem  contact={contact} />\r\n                    </CSSTransition>)\r\n                )}\r\n            </TransitionGroup>) : <Spinner/> }\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n","//to add and update contact\r\n\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport ContactContext from '../../context/contact/contactContext'\r\nconst ContactForm = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n    useEffect(() => {                                 //works same as componentDidMount\r\n        if (current !== null) {\r\n            setContact(current);\r\n        }\r\n        else {\r\n            setContact({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            })\r\n        }\r\n    }, [contactContext, current]) // adding dependencies to make sure that useEffect is triggered only when the dependencies change\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    });\r\n    const { name, email, phone, type } = contact;\r\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(current === null){\r\n            addContact(contact);\r\n        }\r\n        else{\r\n            updateContact(contact)\r\n        }\r\n        \r\n       clearAll();\r\n    }\r\n\r\n    const clearAll = ()=> {\r\n        clearCurrent();\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\r\n            <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={onChange} />\r\n            <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={onChange} />\r\n            <input type=\"text\" placeholder=\"Phone\" name=\"phone\" value={phone} onChange={onChange} />\r\n            <h5>Contact Type</h5>\r\n            <input type=\"radio\" name=\"type\" value=\"personal\" checked={type === 'personal'} onChange={onChange} /> Personal{' '}\r\n            <input type=\"radio\" name=\"type\" value=\"professional\" checked={type === 'professional'} onChange={onChange} /> Professional\r\n            <div>\r\n                <input type=\"submit\" value={current ? 'Update Contact' : 'Add Contact'} className=\"btn btn-success btn-block\" />\r\n            </div>\r\n            {current && <div>\r\n                <button className=\"btn btn-danger btn-block\" onClick={clearAll}>Clear</button>\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\nexport default ContactForm","import React, { useContext, useRef, useEffect } from 'react'\r\nimport ContactItem from './ContactItem'\r\nimport ContactContext from '../../context/contact/contactContext'\r\nconst ContactFilter = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const text = useRef('')\r\n    const { filterContacts, clearFilter, filtered } = contactContext\r\n    useEffect(()=>{\r\n        if(filtered === null){\r\n            text.current.value = '';\r\n        }\r\n    })\r\n    const onChange = e => {\r\n        if(text.current.value !== ''){\r\n            filterContacts(e.target.value)\r\n        }\r\n        else{\r\n            clearFilter();\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form>\r\n            <input ref= {text} type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactFilter\r\n","import React,{useContext, useEffect} from 'react'\r\nimport Contacts from '../contacts/Contacts'\r\nimport ContactItem from '../contacts/ContactForm'\r\nimport ContactFilter from '../contacts/ContactFilter'\r\nimport AuthContext from '../../context/auth/authContext'\r\nexport const Home = () => {\r\n    const authContext = useContext(AuthContext);\r\n    useEffect(() => {\r\n       authContext.loadUser();\r\n    //eslint-disable-next-line\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"grid-2\">\r\n            <div>\r\n                <ContactItem/>\r\n            </div>\r\n            <div>\r\n                <ContactFilter/>\r\n                <Contacts/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n           <h1>About this app</h1>\r\n           <p className=\"my-1\"> \r\n           This is a Full Stack App for keeping contacts </p>\r\n            <p className=\"bg-dark p\"> \r\n                <strong>Version: </strong> 1.0.0 \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\nexport default About;\r\n","// variables that we will use to decide what we are going to do with the REDUCER\r\nexport const GET_CONTACTS = 'GET_CONTACTS'\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\nexport const CLEAR_CONTACTS = 'CLEAR_CONTACTS';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const CONTACT_ERROR = 'CONTACT_ERROR'","import {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return{\r\n                ...state,\r\n                contacts: action.payload,\r\n                loading: false\r\n            }\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload],\r\n                loading: false\r\n            }\r\n\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\r\n                loading: false\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ? action.payload : contact),\r\n                    loading: false\r\n            }\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact =>{\r\n                    const regex = new RegExp(`${action.payload}`,`gi`);  //using regular exp to filter contact and gi = global, insensitive case\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                })    \r\n                }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null}\r\n        case CONTACT_ERROR:\r\n            return{\r\n                ...state,\r\n                error: action.payload\r\n            }        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react'; //useReducer hook so that we can access state and dispatch to our reducer\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactContext from './contactContext'\r\nimport contactReducer from './contactReducer'\r\nimport axios from 'axios'\r\nimport {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../types'\r\nimport { json } from 'express';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: null,\r\n        current: null,\r\n        filtered: null,\r\n        error: null\r\n    }\r\n    //destructuring to get the state data and dispatch them as objects to the reducer\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    //Get Contacts\r\n    const getContacts = async () => {\r\n        \r\n        try {\r\n            const res = await axios.post('/api/contacts')\r\n            dispatch({ type: GET_CONTACTS, payload: res.data });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Add Contact\r\n    const addContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config)\r\n            dispatch({ type: ADD_CONTACT, payload: res.data });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //Delete Contact\r\n    const deleteContact = id => {\r\n        dispatch({ type: DELETE_CONTACT, payload: id });\r\n    }\r\n    //Set current contact\r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n    //Clear current contact\r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n    //Update Contact\r\n    const updateContact = contact => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n    }\r\n    //Filter contacts\r\n    const filterContacts = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text });\r\n    }\r\n    //Clear filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    }\r\n    return (\r\n        <ContactContext.Provider\r\n            value=                                     //anything that we can access from other components need to go over here\r\n            {{\r\n                contacts: state.contacts,\r\n                addContact,\r\n                deleteContact,\r\n                current: state.current,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filtered: state.filtered,\r\n                filterContacts,\r\n                clearFilter,\r\n                getContacts,\r\n                error: state.error\r\n            }}>\r\n            { props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS:\r\n\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} ","import axios from 'axios'\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    }\r\n    else{\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import React, { useReducer } from 'react'; //useReducer hook so that we can access state and dispatch to our reducer\r\nimport AuthContext from './authContext' \r\nimport authReducer from './authReducer' \r\nimport axios from 'axios'\r\nimport setAuthToken from '../../utils/setAuthToken'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS,\r\n    CLEAR_CURRENT\r\n} from '../types'\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: null,\r\n        loading: true,\r\n        user: null,\r\n        error: null    \r\n    }\r\n    //destructuring to get the state data and dispatch them as objects to the reducer\r\n    const[state, dispatch] = useReducer(authReducer, initialState);  \r\n    // Load user\r\n    const loadUser = async () => {\r\n        //@todo- load token into global headers\r\n\r\n        if (localStorage.token){\r\n            setAuthToken(localStorage.token);\r\n        }\r\n        try {\r\n            const res = await axios.get('/api/auth');\r\n            dispatch({ type: USER_LOADED, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            })\r\n        }\r\n    }\r\n    //Register user\r\n    const register = async formData => {\r\n        const config ={\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/users', formData, config);\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data                           // token returned\r\n            });\r\n\r\n            loadUser();\r\n        } catch (err) {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n                payload: err.response.data.msg                           \r\n            });\r\n            }\r\n    }\r\n    //Login user\r\n    const login = async formData => {\r\n        const config ={\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/auth', formData, config);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data                           // token returned\r\n            });\r\n\r\n            loadUser();\r\n        } catch (err) {\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n                payload: err.response.data.msg                           \r\n            });\r\n            }\r\n    }\r\n    //Logout\r\n    const logout = () => {\r\n        dispatch({\r\n            type: LOGOUT\r\n        })\r\n        \r\n    }\r\n    //Clear errors\r\n    const clearErrors = () => dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n    return (\r\n        <AuthContext.Provider\r\n        value =                                     //anything that we can access from other components need to go over here\r\n        {{                                                              \r\n            token: state.token,\r\n            isAuthenticated: state.isAuthenticated,\r\n            loading: state.loading,\r\n            user: state.user,\r\n            error: state.error,\r\n            register,\r\n            loadUser,\r\n            login,\r\n            logout,\r\n            clearErrors\r\n        }}>\r\n            { props.children }\r\n        </AuthContext.Provider>    \r\n    )\r\n}\r\n\r\nexport default AuthState;","//initialize our context\r\n\r\nimport { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import { SET_ALERT, REMOVE_ALERT } from '../types'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react'; //useReducer hook so that we can access state and dispatch to our reducer\r\nimport { v4 as uuidv4 } from 'uuid'; \r\nimport AlertContext from './alertContext' \r\nimport alertReducer from './alertReducer' \r\nimport {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from '../types'\r\n\r\nconst AlertState = props => {\r\n    const initialState = [];\r\n    //destructuring to get the state data and dispatch them as objects to the reducer\r\n    const[state, dispatch] = useReducer(alertReducer, initialState);  \r\n    //Set alert\r\n    const setAlert = (msg, type, timeout = 5000) =>{\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n\r\n        setTimeout(()=> dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n    }\r\n    return (\r\n        <AlertContext.Provider\r\n        value =                                     //anything that we can access from other components need to go over here\r\n        {{                                                              \r\n            alerts: state,\r\n            setAlert\r\n                    \r\n        }}>\r\n            { props.children }\r\n        </AlertContext.Provider>    \r\n    )\r\n}\r\n\r\nexport default AlertState;","import React, { useContext, useEffect, useState } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\nconst Register = props => {\r\n    const authContext = useContext(AuthContext);\r\n    const alertContext = useContext(AlertContext)\r\n    const { setAlert } = alertContext;\r\n    const { register, error, clearErrors, isAuthenticated } = authContext;\r\n    useEffect(()=>{\r\n\r\n        if(isAuthenticated){\r\n            props.history.push('/')  //redirect to home page once valid user logs in\r\n        }\r\n        if(error === 'User already exists'){\r\n            setAlert(error, 'danger');\r\n            clearErrors();\r\n        }\r\n        //eslint-disable-next-line\r\n    },[error, isAuthenticated, props.history])\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    \r\n    const { name, email, password, password2 } = user;\r\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value })\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (name === '' || email === '' || password === '') {\r\n            setAlert('Please enter all fields!', 'danger')\r\n        }\r\n        else if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>\r\n                Account <span className=\"text-primary\">Register</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" value={name} onChange={onChange} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={onChange} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={onChange} required minLength=\"6\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                    <input type=\"password\" name=\"password2\" value={password2} onChange={onChange} required minLength=\"6\" />\r\n                </div>\r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport AlertContext from '../../context/alert/alertContext'\r\n\r\nconst Login = props => {\r\n    const authContext = useContext(AuthContext);\r\n    const alertContext = useContext(AlertContext)\r\n    const { setAlert } = alertContext;\r\n    const { login, error, clearErrors, isAuthenticated } = authContext;\r\n    useEffect(()=>{\r\n\r\n        if(isAuthenticated){\r\n            props.history.push('/')  //redirect to home page once valid user logs in\r\n        }\r\n        if(error === 'Invalid credentials'){\r\n            setAlert(error, 'danger');\r\n            clearErrors();\r\n        }\r\n        //eslint-disable-next-line\r\n    },[error, isAuthenticated, props.history])\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '' \r\n    })\r\n    const { email, password } = user;\r\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value })\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(email === ''|| password === ''){\r\n            setAlert('Please fill in all fields!', 'danger')\r\n        }\r\n        else{\r\n            login({\r\n                email,\r\n                password\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>\r\n                Account <span className=\"text-primary\">Login</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={onChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={onChange} required/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\n\r\nconst Alerts = () => {\r\n    const alertContext = useContext(AlertContext)\r\n    return (\r\n        alertContext.alerts.length > 0 && alertContext.alerts.map( alert => (\r\n            <div key = {alert.id} className={`alert alert-${alert.type}`}>\r\n                <i className=\"fas fa-info-circle\"></i> {alert.msg}\r\n            </div>\r\n        ) )\r\n    )\r\n}\r\nexport default Alerts;\r\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport AuthContext from '../../context/auth/authContext'\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {          //Take out 'component' property from props and assign it to 'Component' var/const\r\n    const authContext = useContext(AuthContext)                        // put all the remaining properties of props to a var/const 'rest'     \r\n    const { isAuthenticated, loading } = authContext;\r\n    return (\r\n        <Route {...rest} render={props => !isAuthenticated && !loading ? (      \r\n            <Redirect to ='/login'/>\r\n        ) : \r\n    (<Component{...props}/>)} />\r\n    )\r\n}\r\nexport default PrivateRoute;","import React, { Fragment } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Navbar } from './components/layout/Navbar';\nimport { Home } from './components/pages/Home';\nimport { About } from './components/pages/About';\nimport ContactState from './context/contact/contactState';\nimport AuthState from './context/auth/AuthState';\nimport AlerState from './context/alert/AlertState'\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alerts from './components/layout/Alerts'\nimport setAuthToken from '../src/utils/setAuthToken'\nimport PrivateRoute from './components/routing/PrivateRoute'\nif (localStorage.token){\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlerState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <div className=\"container\">\n                <Alerts/>\n                  <Switch>\n                    <PrivateRoute exact path=\"/\" component={Home} />\n                    <Route exact path=\"/about\" component={About} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/login\" component={Login} />\n                  </Switch>\n                \n              </div>\n            </Fragment>\n          </Router>\n        </AlerState>\n      </ContactState>\n    </AuthState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n \n"],"sourceRoot":""}